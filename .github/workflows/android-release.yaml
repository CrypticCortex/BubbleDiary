# This is a basic workflow to help you get started with Actions

name: Flutter Release CI

on:
  push:
    branches: [prod]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.googleservices }}
        run: echo $GOOGLE_SERVICES_JSON > /android/app/google-services.json

      - name: Decode upload-keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo $KEYSTORE_BASE64 | base64 --decode > android/app/upload-keystore.jks

      - uses: actions/setup-java@v1
        with:
          java-version: "13.x"

      - uses: subosito/flutter-action@v1.5.0
        with:
          channel: "stable"

      - name: Flutter build apk
        env:
          KEYALIAS: ${{ secrets.KEYALIAS }}
          STOREPASSWORD: ${{ secrets.STOREPASSWORD }}
          KEYPASSWORD: ${{ secrets.KEYPASSWORD }}
        run: |
          flutter pub get
          flutter clean
          flutter build apk
      - name: Generate release notes
        id: release_notes
        run: echo "$(date)" > release-notes.txt

      - name: Upload release assets
        uses: actions/upload-release-asset@latest
        with:
          # these are secrets used by the upload-release-asset action
          upload_url: https://uploads.github.com/repos/CrypticCortex/BubbleDiary/releases/12345/assets{?name,label}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/octet-stream
